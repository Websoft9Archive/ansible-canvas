#1 pre-installation
- name: Create User for Canvas -- adduser --disabled-password --gecos canvas canvas
  user: 
    name: canvas
    comment: canvas
    password_lock: yes
       
- name: rm -rf /data/wwwroot/canvas for second installation
  shell: rm -rf /data/wwwroot/canvas
  
- name: Download canvas
  unarchive:
    src: "{{canvas_download_url}}"
    dest: "/data/wwwroot"
    remote_src: yes
    mode: 0750
    
- name: Rename dir name
  shell: cd /data/wwwroot; if [ ! -d "canvas" ]; then mv canvas-lms* canvas; fi
  
# Database create user and db
- name: Create postgresql_user:canvas and Build postgresql_database:canvas_production
  shell: | 
    chown -R canvas:postgres /data/wwwroot/canvas
    sudo -u postgres createuser canvas --no-createdb --no-superuser --no-createrole
    echo "ALTER USER canvas WITH PASSWORD '{{canvas_postgresql_password}}';\q" | sudo -u postgres psql
    sudo -u postgres createdb canvas_production --owner=canvas
    
- name: Create system users as postgresql users
  remote_user: connection=local 
  shell: |
    sudo -u postgres createuser $USER
    sudo -u postgres psql -c "alter user $USER with superuser" postgres
    
# Install dependencies by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"
  
- name: Install bundle and ruby packages
  shell: |
    bash -lc "bundle install --without pulsar --path vendor/bundle"
  args:
    chdir: /data/wwwroot/canvas
    
- name: Set configuration file
  shell: |
    for config in amazon_s3 database \
    dynamic_settings delayed_jobs domain file_store outgoing_mail security external_migration; \
    do cp config/$config.yml.example config/$config.yml; done
    mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands
    touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss
    touch log/production.log
    chown -R canvas config/environment.rb log tmp public/assets \
    app/stylesheets/_brandable_variables_defaults_autogenerated.scss \
    app/stylesheets/brandable_css_brands Gemfile.lock config.ru
  args:
    chdir: /data/wwwroot/canvas

- name: Yarn install packages
  shell: |
    yarn install
  args:
    chdir: /data/wwwroot/canvas
  failed_when: False
    
- name: Create canvas assets 
  shell: |
    bash -lc "RAILS_ENV=production bundle exec rake canvas:compile_assets"
    chown -R canvas public/dist/brandable_css 
  args:
    chdir: /data/wwwroot/canvas
    
# Set database connection and import meta data    
- name: Set database connection
  shell: | 
    sed -i '18,25s/password: your_password/password: {{canvas_postgresql_password}}/' /data/wwwroot/canvas/config/database.yml

# Canvas ENV Configure
- block:
  - name: Copy local_env file
    copy:
      src: local_env.yml
      dest: /data/wwwroot/canvas/config/local_env.yml
      
  - name: Set config/local_env.yml into .gitignore
    blockinfile:
      path: /data/wwwroot/canvas/.gitignore
      block: |
        /config/local_env.yml

  - name: Add local_env.yml into application.rb
    blockinfile:
      path: /data/wwwroot/canvas/config/application.rb
      insertafter: "ActiveSupport.to_time_preserves_timezone = true"
      block: |
        config.before_configuration do
          env_file = File.join(Rails.root, 'config', 'local_env.yml')
          YAML.load(File.open(env_file)).each do |key, value|
          ENV[key.to_s] = value
          end if File.exists?(env_file)
        end
        
# Canvas ownership
- name: Set Canvas ownership and Set
  shell: |
    chown canvas config/*.yml
    sudo chmod 640 config/*.yml
    setfacl -m u:www-data:rx -R /data/wwwroot/canvas
  args:
    chdir: /data/wwwroot/canvas

- name: Improve canvas bug
  shell: >
    sed -i "s/partman.create_partition(current_partition_time)/partman.create_partition(current_partition_time, graceful: true)/g"  /data/wwwroot/canvas/db/migrate/*_create_auditors_partitions.rb

- name: postgresql initialization & Set login_email, login_password,user
  shell: |
    bash -lc "RAILS_ENV=production bundle exec rake db:initial_setup"
  args:
    chdir: /data/wwwroot/canvas
    
# Apache Configure
- name: Get PassengerRuby directory
  shell: find /usr/local/rvm/gems/ -maxdepth 1 -name "*{{ruby_version}}*" -type d
  register: passenger_ruby_dir

- debug: var=passenger_ruby_dir.stdout

- name: Copy VirtualHosts file with owner and permissions
  template:
    src:  canvas.conf
    dest: /etc/httpd/conf.d/vhost.conf

- name: Restart Apache
  service:
    name: apache
    state: restarted
    enabled: yes
    
# Optimizing File Downloads
- name: Set mod_xsendfile for optimizing file downloads
  copy:
    src:  production-local.rb
    dest: /data/wwwroot/canvas/config/environments/production-local.rb

# Cache configuration
- name: Set Redis of Cache configuration
  shell: |
    cp config/cache_store.yml.example config/cache_store.yml
    cp config/redis.yml.example config/redis.yml
    chown canvas config/*.yml
  args:
    chdir: /data/wwwroot/canvas

# Install QTIMigrationTool
- name: Install QTIMigrationTool 
  shell: |
    cd /data/wwwroot/canvas/vendor
    git clone https://github.com/instructure/QTIMigrationTool.git QTIMigrationTool
    cd QTIMigrationTool
    chmod +x migrate.py

# Automated jobs
- block:
  - name: Copy canvas_init.service file
    copy:
      src: canvas_init.service
      dest: '/lib/systemd/system/canvas-init.service'

  - name: Start and enable canvas-init.service
    service:
      name: canvas-init
      state: restarted
      enabled: yes

# Check version and service state
- block:
  - name: Check Canvas Version
    shell: >
      sudo echo "canvas version:" $(cat /data/wwwroot/canvas/public/doc/api/assignments.html  |grep Effective |awk '{print $2}') |tee -a /data/logs/install_version.txt

  - name: Check canvas_init Service
    shell: systemctl status canvas-init | grep Active*
    register: check_canvas_init_service
    notify: check_canvas_init_service
